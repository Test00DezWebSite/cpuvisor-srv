package cpuvisor;

import "visor_srv.proto";

extend visor.RPCReq {
  optional TrainImageUrls train_image_urls = 100;
  repeated string classifier_paths = 150; // used only for returnClassifiersScoresForImages
}

extend visor.RPCRep {
  repeated Annotation annotations = 150; // used only for legacy save/load annotations
  repeated visor.RankedList scores_collection = 200; // used only for returnClassifiersScoresForImages
}

enum NotificationType {
  NTFY_STATE_CHANGE = 1;
  NTFY_IMAGE_PROCESSED = 2;
  NTFY_ALL_IMAGES_PROCESSED = 3;
  NTFY_ERROR = 100;
}

message FeatProto {
  repeated float data = 1 [packed = true];
}

message FeatsProto {
  optional uint32 num = 1 [default = 0];
  optional uint32 dim = 2 [default = 0];
  repeated float data = 3 [packed = true];
  repeated string paths = 4;

  repeated FeatProto feats = 5; // unused
  repeated string chunks = 10;
}

message ModelProto {
  optional uint32 dim = 2 [default = 0];
  repeated float data = 3 [packed = true];
}

message TrainImageUrls {
  repeated string urls = 1;
  optional bool are_positive = 2 [default = true];
}

message Annotation {
  optional string path = 1;
  optional int32 anno = 2;
}
